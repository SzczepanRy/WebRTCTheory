WebRtc

Web Real-Time Communication

peer to peer to exchange video and audio

????????????????????????????????????????????????????????????????????
simple Explenation

A wants to connect to B

a finds out all the possible ways the public connect to it (creates an offer(SDP))
B finds out all the possible ways the public connect to it (creates an offer(SDP))


A and B signal this session info via other means like ws or http (the sdp)

B Creates Anwser  than signalls to a

a connects to b

A&B also exchange their supparted media and security


????????????????????????????????????????????????????????????????????

NAT (network addres translation)
if the address is not in the same subnet
  the Gateway of the router is called
  than the router switches the internal ip to its public ip
  via the public ip the query to the server is delivered
  its response is sent back the the router witch checks the nat table for the coresponding ip&port via nat translation methods

NAT translation
  One to one NAT (full cone)
    Packets to external IP:port on the router always map to internal IP:port without exceptions
    In other words is is not relient on the responce host


  Addresss restricted NAT
    Packets to external IP:port on the router always map to the internal IP:port as long as the source address from the packet matches the tabe (regardless of port)
    And if we commmunicated with this host before


  Port restricted NAT
    It is the same But we heve to match IP and port

  Symmetric NAT
    webRTC does not corespond with Symmetric
    Same as port restricted nat but we have to match the full pair of the internal ip and port

STUN (Session Traversal Utilities for NAT
  Tells me my ful public ip and port thgough NAT
  Works for  full cone , port and address restricted NAT
  STUN server port 3478 , 5349 for TLS
  Cheap to maintain

  Is used to check the public presence
  It just responds back to us with the metadata ip & port

TURN ( Traversal Using Relays around NAT )
  In case of Symetric NAT we use TURN
  Its just a server that relays packets
  Turn default server port is 3478 , 5349 for TLS
  Expensive to maintain and run

  Basicly a proxy server without a deep packet inspection


ICE ( interactive Connectivity Establishment
  ICE collects all available candidates (local IP addr , reflexive addr  - STUN ones and relayed addr - TURN ones )
  Called ice candidates
  All the collected addr are then sent to the remote peer via SDP

  in other words it determines the availible ways to connect to the client


SDP (session description protocoll)
  A format that describes ice candidates, networking options, media options, security options ...
  Not really a protocol its a format
  The goal is to take the SDP generated by user and send it to the other party

signaling the SDP
  Sends the SDP that we generated to the other party we wish to communicate with
  Signaling can be done via ws ,http ... just get the big string to the other party

pros:




cons:



